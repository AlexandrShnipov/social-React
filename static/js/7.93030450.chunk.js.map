{"version":3,"file":"static/js/7.93030450.chunk.js","mappings":"0LACA,EAA0B,yBAA1B,EAAiH,gCAAjH,EAAgK,8BAAhK,EAAyM,0BAAzM,EAAiP,6BAAjP,EAAgS,iCAAhS,EAAqV,mCCArV,EAA6B,+BAA7B,EAA8E,oCAA9E,EAAmI,mCAAnI,EAA+K,2B,mBCqB/K,EAlBmB,SAACA,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACI,gBAAKC,UAAWC,EAAhB,UACI,UAAC,KAAD,CAASD,UACK,qBAAEE,SAAsB,UAChBD,EADgB,YACIA,GACvBA,GACVE,GAAIL,EAJb,WAKI,gBAAKE,UAAWC,EACXG,IAAKP,EAAMQ,MAAOC,IAAI,UAC1BT,EAAMU,WCfvB,EAA0B,yBCW1B,EARgB,SAACV,GACb,OACI,cAAGG,UAAWC,EAAd,SAA0BJ,EAAMW,W,2DCmElCC,GAAsBC,EAAAA,EAAAA,GAAU,CAClCC,KAAM,wBADkBD,EAhBL,SAACb,GAEpB,IAAMe,GAAeC,EAAAA,EAAAA,GAAiB,KAEtC,OACI,kBAAMb,UAAWC,EAAea,SAAUjB,EAAMkB,aAAhD,WACI,SAACC,EAAA,EAAD,CAAOC,UAAWC,EAAAA,GACXlB,UAAWC,EACXM,KAAM,kBACNY,YAAa,qBACbC,SAAU,CAACC,EAAAA,EAAUT,MAC5B,mBAAQZ,UAAWC,EAAnB,gCASZ,EAnEgB,SAACJ,GAEb,IAAIyB,EAAQzB,EAAM0B,YAEdC,EAAiBF,EAAMG,QAAQC,KAAI,SAAAC,GAAM,OACzC,SAAC,EAAD,CAEI5B,GAAI4B,EAAO5B,GACXM,MAAOsB,EAAOtB,MACdE,KAAMoB,EAAOpB,MAHRoB,EAAO5B,OAIhB6B,EAAkBN,EAAMO,SAASH,KAAI,SAAAlB,GAAO,OAC5C,SAAC,EAAD,CAEIT,GAAIS,EAAQT,GACZS,QAASA,EAAQA,SAFZA,EAAQT,OAUrB,OAAKF,EAAMiC,QAMP,SAACC,EAAA,EAAD,CAAeC,MAAO,WAAtB,UACI,iBAAKhC,UAAWC,EAAhB,WACI,iBAAKD,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACKuB,KAEL,gBAAKxB,UAAWC,EAAhB,UACI,yBACK2B,UAIb,SAACnB,EAAD,CAAqBK,SAxBV,SAACmB,GAEpBpC,EAAMqC,gBAAgBD,EAAOE,iBAC7BF,EAAOE,gBAAkB,YAIlB,SAAC,KAAD,CAAUhC,GAAI,Y,oBCnB7B,GAAeiC,E,QAAAA,KACbC,EAAAA,EAAAA,KAPsB,SAACf,GACvB,MAAO,CACLC,YAAaD,EAAMC,eAKI,CAACW,gBAAAA,EAAAA,IAC1BI,EAAAA,EAFF,CAGGC","sources":["webpack://project-1-social/./src/components/dialogs/Dialogs.module.css?04a9","webpack://project-1-social/./src/components/dialogs/dialogItem/DialogItem.module.css?807d","components/dialogs/dialogItem/DialogItem.jsx","components/dialogs/message/Message.module.css","components/dialogs/message/Message.jsx","components/dialogs/Dialogs.jsx","components/dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__s2FUI\",\"dialogsTitle\":\"Dialogs_dialogsTitle__2Z5w2\",\"dialogsContent\":\"Dialogs_dialogsContent__2rDgc\",\"dialogsItems\":\"Dialogs_dialogsItems__airvQ\",\"messages\":\"Dialogs_messages__SaqTJ\",\"newMessages\":\"Dialogs_newMessages__Etlr5\",\"newMessagesText\":\"Dialogs_newMessagesText__CFm7E\",\"newMessagesButton\":\"Dialogs_newMessagesButton__jsVgl\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialogUser\":\"DialogItem_dialogUser__OTMbE\",\"dialogUserPhoto\":\"DialogItem_dialogUserPhoto__DZO++\",\"dialogUserName\":\"DialogItem_dialogUserName__z5fHy\",\"active\":\"DialogItem_active__eaal3\"};","import React from 'react';\r\nimport s from './DialogItem.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n\r\n    return (\r\n        <div className={s.dialogUser}>\r\n            <NavLink className=\r\n                         {({isActive}) => isActive\r\n                             ? `${s.dialogUserName} ${s.active}`\r\n                             : s.dialogUserName}\r\n                     to={path}>\r\n                <img className={s.dialogUserPhoto}\r\n                     src={props.photo} alt='photo'/>\r\n                {props.name}\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__Mjv+m\"};","import React from 'react';\r\nimport s from './Message.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <p className={s.message}>{props.message}</p>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Message;\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './dialogItem/DialogItem';\r\nimport Message from './message/Message';\r\nimport {Navigate} from 'react-router-dom';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {Textarea} from '../Common/FormsControls/FormsControls';\r\nimport {maxLengthCreator, required} from '../../utils/validators/validators';\r\nimport ContainerPage from '../../common/containerPage/ContainerPage';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage\r\n\r\n    let dialogElements = state.dialogs.map(dialog =>\r\n        <DialogItem\r\n            key={dialog.id}\r\n            id={dialog.id}\r\n            photo={dialog.photo}\r\n            name={dialog.name}/>);\r\n    let messageElements = state.messages.map(message =>\r\n        <Message\r\n            key={message.id}\r\n            id={message.id}\r\n            message={message.message}/>);\r\n\r\n     const addNewMessage = (values) => {\r\n        //debugger\r\n        props.addMessageClick(values.newMessagesText)\r\n        values.newMessagesText = ''\r\n    }\r\n\r\n    if (!props.isAuth) {\r\n        return <Navigate to={'/login'}/>\r\n    }\r\n    ;\r\n\r\n    return (\r\n        <ContainerPage title={'Messages'}>\r\n            <div className={s.dialogs}>\r\n                <div className={s.dialogsContent}>\r\n                    <div className={s.dialogsItems}>\r\n                        {dialogElements}\r\n                    </div>\r\n                    <div className={s.messages}>\r\n                        <div>\r\n                            {messageElements}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </ContainerPage>\r\n\r\n    )\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n\r\n    const maxLength100 = maxLengthCreator(100)\r\n\r\n    return (\r\n        <form className={s.newMessages} onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea}\r\n                   className={s.newMessagesText}\r\n                   name={'newMessagesText'}\r\n                   placeholder={'Enter your message'}\r\n                   validate={[required, maxLength100]}/>\r\n            <button className={s.newMessagesButton}>Send message</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({\r\n    form: 'dialogAddMessageForm'\r\n})(AddMessageForm)\r\n\r\nexport default Dialogs;\r\n\r\n\r\n","import React from 'react';\r\nimport {addMessageClick} from '../../redux/dialogPageReducer';\r\nimport Dialogs from './Dialogs';\r\nimport {connect} from 'react-redux';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  }\r\n}\r\n\r\nexport default compose (\r\n  connect(mapStateToProps, {addMessageClick}),\r\n  withAuthRedirect\r\n) (Dialogs);\r\n\r\n\r\n"],"names":["props","path","id","className","s","isActive","to","src","photo","alt","name","message","AddMessageFormRedux","reduxForm","form","maxLength100","maxLengthCreator","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","state","dialogsPage","dialogElements","dialogs","map","dialog","messageElements","messages","isAuth","ContainerPage","title","values","addMessageClick","newMessagesText","compose","connect","withAuthRedirect","Dialogs"],"sourceRoot":""}