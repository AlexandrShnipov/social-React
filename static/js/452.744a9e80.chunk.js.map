{"version":3,"file":"static/js/452.744a9e80.chunk.js","mappings":"4LACA,EAA4B,yBAA5B,EAAwE,gCAAxE,EAA6H,kC,oEC2CvHA,GAAiBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,SAAjBD,EAlCL,SAACE,GAMf,OACI,kBAAMC,SANU,SAACC,GACjBA,EAAEC,iBACFH,EAAMI,gBAIuBC,UAAWC,EAAxC,WACKC,EAAAA,EAAAA,IACGC,EAAAA,GAAO,QAAS,QAAS,mBAAoB,CAACC,EAAAA,KAEjDF,EAAAA,EAAAA,IACGC,EAAAA,GAAO,WAAY,WAAY,sBAAuB,CAACC,EAAAA,KAG3D,kBAAOJ,UAAWC,EAAlB,UACKC,EAAAA,EAAAA,IAAaC,EAAAA,GAAM,aAAc,WAAY,GAAI,GAAI,CAAC,eAAgB,iBAG1ER,EAAMU,aACH,gBAAKC,IAAKX,EAAMU,WAAYE,IAAK,YAEpCZ,EAAMU,aACHH,EAAAA,EAAAA,IACIC,EAAAA,GAAO,UAAW,OAAQ,qBAAsB,CAACC,EAAAA,IAGxDT,EAAMa,QAAS,gBAAKR,UAAWC,EAAhB,SACXN,EAAMa,SACX,mBAAQC,KAAM,SAAd,yBAgCZ,GAAeC,EAAAA,EAAAA,KALQ,SAACC,GAAD,MAAY,CAC/BN,WAAYM,EAAMC,KAAKP,WACvBQ,OAAQF,EAAMC,KAAKC,UAGgB,CAACC,MAAAA,EAAAA,IAAxC,EAzBc,SAACnB,GAOX,OAAIA,EAAMkB,QAEF,SAAC,KAAD,CAAUE,GAAI,cAKlB,SAACC,EAAA,EAAD,CAAeC,MAAO,QAAtB,UACI,SAACzB,EAAD,CAAgBI,SAbP,SAACsB,GACdC,QAAQC,IAAIF,GACZvB,EAAMmB,MAAMI,EAASG,MAAOH,EAASI,SAAUJ,EAASK,WAAYL,EAASM,UAWrCnB,WAAYV,EAAMU","sources":["webpack://project-1-social/./src/components/login/Login.module.css?3966","components/login/Login.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loginForm\":\"Login_loginForm__OyqxU\",\"formSummaryError\":\"Login_formSummaryError__HNsPa\",\"labelForRememberMe\":\"Login_labelForRememberMe__4ch0S\"};","import React from 'react';\r\nimport ContainerPage from '../../common/containerPage/ContainerPage';\r\nimport s from './Login.module.css';\r\nimport {reduxForm} from 'redux-form';\r\nimport {createField, Input} from '../Common/FormsControls/FormsControls';\r\nimport {required} from '../../utils/validators/validators';\r\nimport {connect} from 'react-redux';\r\nimport {Navigate} from 'react-router-dom';\r\nimport {login} from '../../redux/authReducer';\r\n\r\nconst LoginForm = (props) => {\r\n    const submitLogin = (e) => {\r\n        e.preventDefault();\r\n        props.handleSubmit();\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={submitLogin} className={s.loginForm}>\r\n            {createField(\r\n                Input, 'email', 'email', 'Enter your email', [required])\r\n            }\r\n            {createField(\r\n                Input, 'password', 'password', 'Enter your password', [required])\r\n            }\r\n\r\n            <label className={s.labelForRememberMe}>\r\n                {createField( Input,'rememberMe', 'checkbox', '', [], ['remember me'], 'remember me')}\r\n            </label>\r\n\r\n            {props.captchaUrl &&\r\n                <img src={props.captchaUrl} alt={'captcha'}/>\r\n            }\r\n            {props.captchaUrl &&\r\n                createField(\r\n                    Input, 'captcha', 'text', 'Symbols from image', [required])\r\n            }\r\n\r\n            {props.error && <div className={s.formSummaryError}>\r\n                {props.error}</div>}\r\n            <button type={'submit'}>login</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        console.log(formData)\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return (\r\n            <Navigate to={'/profile'}/>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <ContainerPage title={'Login'}>\r\n            <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n        </ContainerPage>\r\n    )\r\n}\r\n\r\nconst mapStateToPops = (state) => ({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToPops, {login})(Login);"],"names":["LoginReduxForm","reduxForm","form","props","onSubmit","e","preventDefault","handleSubmit","className","s","createField","Input","required","captchaUrl","src","alt","error","type","connect","state","auth","isAuth","login","to","ContainerPage","title","formData","console","log","email","password","rememberMe","captcha"],"sourceRoot":""}